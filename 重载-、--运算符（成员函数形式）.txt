Description
将2820的重载运算符改写成成员函数形式

Input
输入两个时间的时分秒

Output
输出程序运行结果

Sample Input
2 20 10 2 10 5
Sample Output
0:10'5"
0:10'4"
0:10'2"
0:10'2"
0:10'1"



代码：

// Time.h: interface for the Time class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_TIME_H__ECAF27A9_8871_41EA_875B_32726FAAC0CA__INCLUDED_)
#define AFX_TIME_H__ECAF27A9_8871_41EA_875B_32726FAAC0CA__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

class Time 
{
public:
	Time (int ,int ,int );
	Time();
	void disp();
	Time operator -(Time &);
	Time& operator --();
	Time operator --(int );
protected:
	int shi;
	int fen;
	int miao;

};

#endif // !defined(AFX_TIME_H__ECAF27A9_8871_41EA_875B_32726FAAC0CA__INCLUDED_)
//



// Time.cpp: implementation of the Time class.
//
//////////////////////////////////////////////////////////////////////

//#include "Time.h"多文件需要
#include<iostream>
using namespace std;
//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

Time::Time (int h,int m,int s)
{
	shi=h;
	fen=m;
	miao=s;
}
Time::Time()
{
	shi=0;
	fen=0;
	miao=0;
}
void Time::disp()
{
	cout<<shi<<":"<<fen<<"\'"<<miao<<"\""<<endl;
}
Time Time:: operator -(Time &t)
{
	Time cha;
	cha.shi=shi-t.shi;
	cha.fen=fen-t.fen;
	cha.miao=miao-t.miao;
	if(cha.fen<0)
	{
		cha.shi--;
		cha.fen=cha.fen+60;
	}
	if(cha.miao<0)
	{
		cha.fen--;
		cha.miao=cha.miao+60;
	}
	if(cha.shi<0)
	{
		cha.shi=cha.shi+24;
	}
	return cha;
}
Time& Time:: operator --()
{
	miao--;
	if(miao<0)
	{
		fen--;
		miao=miao+60;
	}
	if(fen<0)
	{
		shi--;
		fen=fen+60;
	}
	if(shi<0)
	{
		shi=shi+24;
	}
	return *this;
}
Time Time::operator --(int )
{
	Time tt(*this);
	miao--;
	if(miao<0)
	{
		fen--;
		miao=miao+60;
	}
	if(fen<0)
	{
		shi--;
		fen=fen+60;
	}
	if(shi<0)
	{
		shi=shi+24;
	}
	return tt;
}
//




//主函数.cpp
//#include<iostream>多文件需要
//using namespace std;多文件需要
//#include"Time.h"多文件需要
int main()      
{   
	int h1,m1,s1,h2,m2,s2;
	cin>>h1>>m1>>s1>>h2>>m2>>s2;
	Time  t1(h1,m1,s1), t2(h2,m2,s2), t;      
	t=t1-t2;      
	t.disp();      
	t--;      
	t.disp();      
	(--t)--;      
	t.disp(); 
	(t--).disp();
	t.disp();
	return 0;    
}